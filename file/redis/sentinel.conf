#哨兵sentinel实例运行的端口 默认26379
port 26379
#哨兵sentine1的工作目录
dir /etc/redis
#哨兵sentine1监控的redis主节点的 ip port
# master-name 可以自己命名的主节点名字只能由字母A-Z、数字0-9、这三个字符".-_"组成。
# quorum 配置多少个sentinel哨兵统一认为master主节点失联 那么这时客观上认为主节点失联了
# quorum的值一般设置为sentinel个数的二分之一加1，例如3个sentinel就设置2。
# sentine1 monitor <master-name> <ip> <redis-port> <quorum>
sentinel monitor mymaster 192.168.1.128 6379 2

# 当在Redis实例中开启了requirepass foobared 授权密码 这样所有连接Redis实例的客户端都要提供密码
# 设置哨兵sentine1 连接主从的密码 注意必须为主从设置一样的验证密码
# sentinel auth-pass <master-name> <password>
sentinel auth-pass mymaster www362412

#指定多少毫秒之后 主节点没有应答哨兵sentine1 此时 哨兵主观上认为主节点下线 默认30秒
# sentine1 down-after-mi11iseconds <master-name> <mi11iseconds>
sentinel down-after-milliseconds mymaster 10000

#这个配置项指定了在发生failover主备切换时最多可以有多少个slave同时对新的master进行 同步这个数字越小，完成failover所需的时间就越长，
#但是如果这个数字越大，就意味着越多的s1ave因为rep1ication而不可用。
#可以通过将这个值设为1来保证每次只有一个s1ave处于不能处理命令请求的状态。
# sentine1 parallel-syncs <master-name> <numslaves>
sentinel parallel-syncs mymaster 1

#故障转移的超时时间 failover-timeout 可以用在以下这些方面:
#1.同一个sentine1对同一个master两次failover之间的间隔时间
#2，当一个slave从一个错误的master那里同步数据开始计算时间。直到slave被纠正为向正确的master那里同步数据时
#3.当想要取消一个正在进行的failover所需要的时间。
#4，当进行failover时，配置所有slaves指向新的master所需的最大时间。不过，即使过了这个超时，slaves依然会被正确配置为指向 master，但是就不按para11e1-syncs所配置的规则来了
# 默认三分钟
#sentine1 failover-timeout <master-name> <mi11iseconds>
sentinel failover-timeout mymaster 180000

#SCRIPTS EXECUTION

#配置当某一事件发生时所需要执行的脚本，可以通过脚本来通知管理员，例如当系统运行不正常时发邮件通知相关人员#对于脚本的运行结果有以下规则:
#若脚本执行后返回1，那么该脚本稍后将会被再次执行，重复次数目前默认为10#若脚本执行后返回2，或者比2更高的一个返回值，脚本将不会重复执行。
#如果脚本在执行过程中由于收到系统中断信号被终止了，则同返回值为1时的行为相同
#一个脚本的最大执行时间为60s，如果超过这个时间，脚本将会被一个SIGKILL信号终止，之后重新执行。

#通知型脚本:当sentine1有任何警告级别的事件发生时(比如说redis实例的主观失效和客观失效等等)，将会去调用这个脚本，这时这个脚本应该通过邮件，
# SMS等方式去通知系统管理员关于系统不正常运行的信息。调用该脚本时，将传给脚本两个参数，一个是事件的类型，个是事件的描述。
# 如果sentinel.conf配置文件中配置了这个脚本路径。那么必须保证这个脚本存在干这个路径，并目是可执行的，否则 sentinel无法正常启动成功#通知脚本
# sentinel notification-script <master-name> <script-path>
#sentinel notification-script mymaster /var/redis/notify.sh

#客户端重新配置士节占参数脚本
# 当一个master由于failover而发生改变时，这个脚本将会被调用，通知相关的客户端关于master地址已经发生改变的信息。
# 以下参数将会在调用脚本时传给脚本:
# <master-name> <role> <state> <from-ip> <from-port> <to-ip> <to-port># 目前<state>总是“failover”
# <role>是“Teader”或者“observer”中的一个。
# 参数 from-ip，from-port，to-ip，to-port是用来和旧的master和新的master(即旧的s1ave)通信的# 这个脚本应该是通用的，能被多次调用，不是针对性的。
# sentinel client-reconfig-script <master-name> <script-path>
#sentinel client-reconfig-script mymaster /var/redis/reconfig.sh